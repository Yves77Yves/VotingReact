{"version":3,"sources":["contexts/EthContext/EthContext.js","contexts/EthContext/state.js","contexts/EthContext/EthProvider.jsx","contexts/EthContext/useEth.js","components/Demo/Address.jsx","components/Demo/Title.jsx","components/Demo/Cta.jsx","components/Demo/Voter.jsx","components/Demo/VoterBtns.jsx","components/Demo/NoticeNoArtifact.jsx","components/Demo/NoticeWrongNetwork.jsx","components/Demo/Proposal.jsx","components/Demo/ProposalBtns.jsx","components/Demo/Vote.jsx","components/Demo/VoteBtns.jsx","components/Demo/EndProposalsRegistering.jsx","components/Demo/EndProposalsRegisteringBtns.jsx","components/Demo/EndVotingSession.jsx","components/Demo/EndVotingSessionBtns.jsx","components/Demo/StartProposalsRegistering.jsx","components/Demo/StartProposalsRegisteringBtns.jsx","components/Demo/StartVotingSession.jsx","components/Demo/Tally.jsx","components/Demo/TallyBtns.jsx","components/Demo/Winner.jsx","components/Demo/StartVotingSessionBtns.jsx","components/Demo/WinnerBtns.jsx","components/Demo/Events.jsx","components/Demo/index.jsx","App.jsx","index.js"],"names":["EthContext","createContext","actions","initialState","artifact","web3","accounts","networkID","contract","reducer","state","action","type","data","Error","EthProvider","children","useReducer","dispatch","init","useCallback","Web3","givenProvider","eth","requestAccounts","net","getId","abi","address","networks","Contract","err","console","error","useEffect","tryInit","require","events","handleChange","forEach","e","window","ethereum","on","removeListener","Provider","value","useEth","useContext","Address","className","Title","Cta","Voter","isRegistered","hasVoted","votedProposalId","spanEle","useRef","current","classList","add","flash","setTimeout","remove","clearTimeout","ref","VoterBtns","setIsRegistered","setHasVoted","setVotedProposalId","setEventValue","setOldEvents","setErrorValue","useState","inputReadValue","setInputReadValue","inputValue","setInputValue","getPastEvents","fromBlock","toBlock","oldEvents","oldies","event","push","returnValues","voterAddress","VoterRegistered","lesevents","changed","log","str","read","target","tagName","alert","newReadValue","methods","getVoter","call","from","ReadValue","write","newValue","addVoter","send","code","onClick","placeholder","onChange","NoticeNoArtifact","NoticeWrongNetwork","Proposal","description","voteCount","ProposalBtns","setDescription","setVoteCount","inputIdValue","setInputIdValue","inputDescriptionValue","setDescriptionIdValue","getOneProposal","addProposal","Vote","id","VoteBtns","setId","setIdValue","setVote","endProposalsRegistering","currentStatus","EndProposalsRegisteringBtns","setCurrentStatus","workflowStatus","EndVotingSession","EndVotingSessionBtns","endVotingSession","StartProposalsRegistering","StartProposalsRegisteringBtns","startProposalsRegistering","StartVotingSession","EndTally","TallyBtns","tallyVotes","Winner","winningProposalID","StartVotingSessionBtns","startVotingSession","WinnerBtns","setWinningProposalID","Events","eventValue","errorValue","Demo","demo","EndProposalsRegistering","Tally","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.81ca82da.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst EthContext = createContext();\n\nexport default EthContext;\n","const actions = {\n  init: \"INIT\",\n};\n\nconst initialState = {\n  artifact: null,\n  web3: null,\n  accounts: null,\n  networkID: null,\n  contract: null\n};\n\nconst reducer = (state, action) => {\n  const { type, data } = action;\n  switch (type) {\n    case actions.init:\n      return { ...state, ...data };\n    default:\n      throw new Error(\"Undefined reducer action type\");\n  }\n};\n\nexport {\n  actions,\n  initialState,\n  reducer\n};\n","import React, { useReducer, useCallback, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport { reducer, actions, initialState } from \"./state\";\n\nfunction EthProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const init = useCallback(\n    async artifact => {\n      if (artifact) {\n        const web3 = new Web3(Web3.givenProvider || \"ws://localhost:8545\");\n        const accounts = await web3.eth.requestAccounts();\n        const networkID = await web3.eth.net.getId();\n        const { abi } = artifact;\n        let address, contract;\n        try {\n          address = artifact.networks[networkID].address;\n          contract = new web3.eth.Contract(abi, address);\n        } catch (err) {\n          console.error(err);\n        }\n        dispatch({\n          type: actions.init,\n          data: { artifact, web3, accounts, networkID, contract }\n        });\n      }\n    }, []);\n\n  useEffect(() => {\n    const tryInit = async () => {\n      try {\n        const artifact = require(\"../../contracts/Voting.json\");\n        init(artifact);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    tryInit();\n  }, [init]);\n\n  useEffect(() => {\n    const events = [\"chainChanged\", \"accountsChanged\"];\n    const handleChange = () => {\n      init(state.artifact);\n    };\n\n    events.forEach(e => window.ethereum.on(e, handleChange));\n    return () => {\n      events.forEach(e => window.ethereum.removeListener(e, handleChange));\n    };\n  }, [init, state.artifact]);\n\n  return (\n    <EthContext.Provider value={{\n      state,\n      dispatch\n    }}>\n      {children}\n    </EthContext.Provider>\n  );\n}\n\nexport default EthProvider;\n","import { useContext } from 'react';\nimport EthContext from \"./EthContext\";\n\nconst useEth = () => useContext(EthContext);\n\nexport default useEth;\n","import useEth from \"../../contexts/EthContext/useEth\";\n\nfunction Address() {\n  const { state: { accounts } } = useEth();\n  \n  return (\n    <div className=\"addr\">\n        {accounts && accounts[0] && <pre>{accounts[0]}</pre>}\n    </div>\n    );\n}\n\nexport default Address;","import useEth from \"../../contexts/EthContext/useEth\";\nimport Address from \"./Address\";\n\n\nfunction Title() {\n\n  const {  accounts }  = useEth();\n\n  return (\n    <div className=\"web3stuff\">\n        <h2> Adresse connectée </h2>\n        <h3> <Address accounts={accounts}/> </h3>\n        <br/><br/>\n        <h2>Déroulé du Vote</h2>\n        <br/>\n\n    </div>\n  );\n}\n\n\nexport default Title;","function Cta() {\n  return (\n    <p>\n      Next Step in \n      &nbsp;\n      <span className=\"code\">VOTING</span>.\n    </p>\n  );\n}\n\nexport default Cta;\n","import { useRef, useEffect } from 'react';\n\nfunction Voter({ isRegistered, hasVoted, votedProposalId }) {\n  const spanEle = useRef(null);\n\n  useEffect(() => {\n    spanEle.current.classList.add(\"flash\");\n    const flash = setTimeout(() => {\n      spanEle.current.classList.remove(\"flash\");\n    }, 300);\n    return () => {\n      clearTimeout(flash);\n    };\n  }, [isRegistered, hasVoted]);\n\n  return (\n    <code>\n      {`Add and Get a Voter : `}\n\n      <span className=\"secondary-color\" ref={spanEle}>\n        <div><strong>isRegistered : {isRegistered}</strong></div>\n        <div><strong>hasVoted : {hasVoted}</strong></div>\n        <div><strong>votedProposalId : {votedProposalId}</strong></div>\n      </span>\n\n    </code>\n  );\n}\n\nexport default Voter;\n","import { useState, useEffect } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\n\nfunction VoterBtns({ setIsRegistered,  setHasVoted, setVotedProposalId, setEventValue, setOldEvents, setErrorValue }) {\n  const { state: { contract, accounts } } = useEth();\n  const [inputReadValue, setInputReadValue] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleInputChange = e => {\n      setInputValue(e.target.value);\n  };\n\n  const handleInputReadChange = e => {\n    setInputReadValue(e.target.value);\n};\n\nuseEffect(() => {\n  (async function () {\n\n     let oldEvents= await contract.getPastEvents('VoterRegistered', {\n        fromBlock: 0,\n        toBlock: 'latest'\n      });\n      let oldies=[];\n      oldEvents.forEach(event => {\n          oldies.push(event.returnValues.voterAddress);\n      });\n      setOldEvents(oldies);\n\n      await contract.events.VoterRegistered({fromBlock:\"earliest\"})\n      .on('data', event => {\n        let lesevents = event.returnValues.voterAddress;\n        setEventValue(lesevents);\n        setErrorValue();\n      })          \n      .on('changed', changed => console.log(changed))\n      .on('error', err => console.log(err))\n      .on('connected', str => console.log(str))\n  })();\n}, [contract, setEventValue, setOldEvents, setErrorValue])\n  \n\n  const read = async e  => {\n    if (e.target.tagName === \"INPUT\") {\n      return;\n    }\n    if (inputReadValue === \"\") {\n      alert(\"Please enter a value to write.\");\n      return;\n    }\n    const newReadValue = inputReadValue;\n    const ReadValue = await contract.methods.getVoter(newReadValue).call({from: accounts[0]});\n    setIsRegistered(ReadValue.isRegistered? \"yes\": \"no\");\n    setHasVoted(ReadValue.hasVoted? \"yes\": \"no\");\n    setVotedProposalId(ReadValue.votedProposalId);\n\n  };\n\n  const write = async e => {\n    if (e.target.tagName === \"INPUT\") {\n      return;\n    }\n    if (inputValue === \"\") {\n      alert(\"Please enter a value to write.\");\n      return;\n    }\n\n    /*\n    const newValue = inputValue;\n    await contract.methods.addVoter(newValue).send({ from: accounts[0] });\n    */\n\n    const newValue = inputValue;\n    (async () => {\n      try {\n        await contract.methods.addVoter(newValue).send({ from: accounts[0] })\n      } catch (e) {\n          setErrorValue(e.code);\n          setEventValue();\n      }\n  })()\n\n\n  };\n\n  return (\n    <div className=\"btns\">\n\n      \n<div onClick={write} className=\"input-btn\">\n        add(<input\n          type=\"text\"\n          placeholder=\"addresse\"\n          value={inputValue}\n          onChange={handleInputChange}\n        />)\n      </div>\n\n      <div onClick={read} className=\"input-btn\">\n        get(<input\n          type=\"text\"\n          placeholder=\"addresse\"\n          value={inputReadValue}\n          onChange={handleInputReadChange}\n        />)\n      </div>\n\n\n    </div>\n  );\n}\n\nexport default VoterBtns;\n","function NoticeNoArtifact() {\n  return (\n    <p>\n      ⚠️ Cannot find <span className=\"code\">SimpleStorage</span> contract artifact.\n      Please complete the above preparation first, then restart the react dev server.\n    </p>\n  );\n}\n\nexport default NoticeNoArtifact;\n","function NoticeWrongNetwork() {\n  return (\n    <p>\n      ⚠️ MetaMask is not connected to the same network as the one you deployed to.\n    </p>\n  );\n}\n\nexport default NoticeWrongNetwork;\n","import { useRef, useEffect } from 'react';\n\nfunction Proposal({ description, voteCount }) {\n  const spanEle = useRef(null);\n\n  useEffect(() => {\n    spanEle.current.classList.add(\"flash\");\n    const flash = setTimeout(() => {\n      spanEle.current.classList.remove(\"flash\");\n    }, 300);\n    return () => {\n      clearTimeout(flash);\n    };\n  }, [description, voteCount]);\n\n  return (\n    <code>\n      {`Submit and Get a Proposal : `}\n\n      <span className=\"secondary-color\" ref={spanEle}>\n        <div><strong>description : {description}</strong></div>\n        <div><strong>voteCount : {voteCount}</strong></div>\n        <div><strong> </strong></div>\n      </span>\n\n    </code>\n  );\n}\n\nexport default Proposal;\n","import { useState } from 'react';\nimport useEth from \"../../contexts/EthContext/useEth\";\n\nfunction ProposalBtns({ setDescription, setVoteCount }) {\n  const { state: { contract, accounts } } = useEth();\n  const [inputIdValue, setInputIdValue] = useState(\"\");\n  const [inputDescriptionValue, setDescriptionIdValue] = useState(\"\");\n\n\n  const handleInputIdChange = e => {\n    setInputIdValue(e.target.value);\n  };\n\n  const handleInputDescriptionChange = e => {\n    setDescriptionIdValue(e.target.value);\n  };\n\n\n\n  const read = async e => {\n    if (e.target.tagName === \"INPUT\") {\n      return;\n    }\n    if (inputIdValue === \"\") {\n      alert(\"Please enter a value to write.\");\n      return;\n    }\n    const newValue = inputIdValue;\n    const ReadValue = await contract.methods.getOneProposal(newValue).call({ from: accounts[0] });\n    setDescription(ReadValue.description);\n    setVoteCount(ReadValue.voteCount);\n  };\n\n  const write = async e => {\n    if (e.target.tagName === \"INPUT\") {\n      return;\n    }\n    if (inputDescriptionValue === \"\") {\n      alert(\"Please enter a value to write.\");\n      return;\n    }\n    const newValue = inputDescriptionValue;\n    await contract.methods.addProposal(newValue).send({ from: accounts[0] });\n  };\n\n  return (\n    <div className=\"btns\">\n\n      <div onClick={write} className=\"input-btn\">\n        submit(<input\n          type=\"text\"\n          placeholder=\"addresse\"\n          value={inputDescriptionValue}\n          onChange={handleInputDescriptionChange}\n        />)\n      </div>\n\n      <div onClick={read} className=\"input-btn\">\n        get(<input\n          type=\"text\"\n          placeholder=\"Id\"\n          value={inputIdValue}\n          onChange={handleInputIdChange}\n        />)\n      </div>\n\n    </div>\n  );\n}\n\nexport default ProposalBtns;\n","import { useRef, useEffect } from 'react';\n\nfunction Vote({ id }) {\n  const spanEle = useRef(null);\n\n  useEffect(() => {\n    spanEle.current.classList.add(\"flash\");\n    const flash = setTimeout(() => {\n      spanEle.current.classList.remove(\"flash\");\n    }, 300);\n    return () => {\n      clearTimeout(flash);\n    };\n  }, []);\n\n  return (\n    <code>\n      {`Vote for a Proposal : `}\n\n      <span className=\"secondary-color\" ref={spanEle}>\n        <div><strong>Id proposal : {id}</strong></div>\n      </span>\n\n    </code>\n  );\n}\n\nexport default Vote;\n","import { useState } from 'react';\nimport useEth from \"../../contexts/EthContext/useEth\";\n\nfunction VoteBtns({ setId }) {\n  const { state: { contract, accounts } } = useEth();\n\n  const [inputIdValue, setIdValue] = useState(\"\");\n\n\n\nconst handleIdValueChange = e => {\n  setIdValue(e.target.value);\n};\n\n\n\n\n  const write = async e => {\n    if (e.target.tagName === \"INPUT\") {\n      return;\n    }\n    if (inputIdValue === \"\") {\n      alert(\"Please enter a value to write.\");\n      return;\n    }\n    const newValue = inputIdValue;\n    await contract.methods.setVote(newValue).send({ from: accounts[0] });\n  };\n\n  return (\n    <div className=\"btns\">\n\n      <div onClick={write} className=\"input-btn\">\n        vote(<input\n          type=\"text\"\n          placeholder=\"Id Proposal\"\n          value={inputIdValue}\n          onChange={handleIdValueChange}\n        />)\n      </div>\n\n    </div>\n  );\n}\n\nexport default VoteBtns;\n","function endProposalsRegistering({ currentStatus }) {\n\n  return (\n    <code>\n      {`close proposal submissions : `}\n\n      <span className=\"secondary-color\" >\n        <div><strong>currentStatus : {currentStatus}</strong></div>\n      </span>\n    </code>\n  );\n}\n\nexport default endProposalsRegistering;\n","import useEth from \"../../contexts/EthContext/useEth\";\n\nfunction EndProposalsRegisteringBtns({setCurrentStatus}) {\n  const { state: { contract, accounts } } = useEth();\n\n  \n  const read =  async () => {\n    await contract.methods.endProposalsRegistering().send({from: accounts[0]});\n    const value = await contract.methods.workflowStatus().call({from: accounts[0]});\n    setCurrentStatus(value);\n  };\n\n  return (\n    <div className=\"btns\">\n\n      <button onClick={read}>\n        close submissions\n      </button>\n\n    </div>\n  );\n}\n\nexport default EndProposalsRegisteringBtns;\n","function EndVotingSession({ currentStatus }) {\n\n  return (\n    <code>\n      {`Close poll : `}\n\n      <span className=\"secondary-color\" >\n        <div><strong>currentStatus : {currentStatus}</strong></div>\n      </span>\n    </code>\n  );\n}\n\nexport default EndVotingSession;\n","import useEth from \"../../contexts/EthContext/useEth\";\n\nfunction EndVotingSessionBtns({setCurrentStatus}) {\n  const { state: { contract, accounts } } = useEth();\n\n  \n  const read =  async () => {\n    await contract.methods.endVotingSession().send({from: accounts[0]});\n    const value = await contract.methods.workflowStatus().call({from: accounts[0]});\n    setCurrentStatus(value);\n  };\n\n  return (\n    <div className=\"btns\">\n\n      <button onClick={read}>\n        close poll\n      </button>\n\n    </div>\n  );\n}\n\nexport default EndVotingSessionBtns;\n","function StartProposalsRegistering({ currentStatus }) {\n\n  return (\n    <code>\n      {`Open proposal submissions : `}\n\n      <span className=\"secondary-color\" >\n        <div><strong>currentStatus : {currentStatus}</strong></div>\n      </span>\n    </code>\n  );\n}\n\nexport default StartProposalsRegistering;\n","import useEth from \"../../contexts/EthContext/useEth\";\n\nfunction StartProposalsRegisteringBtns({setCurrentStatus}) {\n  const { state: { contract, accounts } } = useEth();\n\n  \n  const read =  async () => {\n    await contract.methods.startProposalsRegistering().send({from: accounts[0]});\n    const value = await contract.methods.workflowStatus().call({from: accounts[0]});\n    setCurrentStatus(value);\n  };\n\n  return (\n    <div className=\"btns\">\n\n      <button onClick={read}>\n        open submissions\n      </button>\n\n    </div>\n  );\n}\n\nexport default StartProposalsRegisteringBtns;\n","function StartVotingSession({ currentStatus }) {\n\n  return (\n    <code>\n      {`Open poll : `}\n\n      <span className=\"secondary-color\" >\n        <div><strong>currentStatus : {currentStatus}</strong></div>\n      </span>\n    </code>\n  );\n}\n\nexport default StartVotingSession;\n","function EndTally({ currentStatus }) {\n\n  return (\n    <code>\n      {`Tally : `}\n\n      <span className=\"secondary-color\" >\n        <div><strong>currentStatus : {currentStatus}</strong></div>\n      </span>\n    </code>\n  );\n}\n\nexport default EndTally;\n","import useEth from \"../../contexts/EthContext/useEth\";\n\nfunction TallyBtns({setCurrentStatus}) {\n  const { state: { contract, accounts } } = useEth();\n\n  \n  const write =  async () => {\n    await contract.methods.tallyVotes().send({from: accounts[0]});\n    const value = await contract.methods.workflowStatus().call({from: accounts[0]});\n    setCurrentStatus(value);\n  };\n\n  return (\n    <div className=\"btns\">\n\n      <button onClick={write}>\n        tally\n      </button>\n\n    </div>\n  );\n}\n\nexport default TallyBtns;\n","function Winner({ winningProposalID }) {\n\n  return (\n    <code>\n      {`The Winner : `}\n\n      <span className=\"secondary-color\" >\n        <div><strong>Winner : {winningProposalID}</strong></div>\n      </span>\n    </code>\n  );\n}\n\nexport default Winner;\n","import useEth from \"../../contexts/EthContext/useEth\";\n\nfunction StartVotingSessionBtns({setCurrentStatus}) {\n  const { state: { contract, accounts } } = useEth();\n\n  \n  const read =  async () => {\n    await contract.methods.startVotingSession().send({from: accounts[0]});\n    const value = await contract.methods.workflowStatus().call({from: accounts[0]});\n    setCurrentStatus(value);\n  };\n\n  return (\n    <div className=\"btns\">\n\n      <button onClick={read}>\n        open poll\n      </button>\n\n    </div>\n  );\n}\n\nexport default StartVotingSessionBtns;\n","import useEth from \"../../contexts/EthContext/useEth\";\n\nfunction WinnerBtns({setWinningProposalID}) {\n  const { state: { contract, accounts } } = useEth();\n\n  \n  const read =  async () => {\n    const value = await contract.methods.winningProposalID().call({from: accounts[0]});\n    setWinningProposalID(value);\n  };\n\n  return (\n    <div className=\"btns\">\n\n      <button onClick={read}>\n        get winner\n      </button>\n\n    </div>\n  );\n}\n\nexport default WinnerBtns;\n","import { useRef, useEffect } from 'react';\n\nfunction Events({ eventValue, oldEvents, errorValue }) {\n  const spanEle = useRef(null);\n\n  useEffect(() => {\n    spanEle.current.classList.add(\"flash\");\n    const flash = setTimeout(() => {\n      spanEle.current.classList.remove(\"flash\");\n    }, 300);\n    return () => {\n      clearTimeout(flash);\n    };\n  }, []);\n\n  return (\n    <code>\n      {`Last message : `}\n\n      <span className=\"secondary-color\" ref={spanEle}>\n        <div ><strong> {errorValue ? 'Error : ' : eventValue? 'Adress : ': ''}{eventValue} {errorValue}  </strong></div>\n        {/*<div><strong>oldEvents : {oldEvents}</strong></div>*/}\n      </span>\n\n    </code>\n  );\n}\n\nexport default Events;\n","import { useState } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport Title from \"./Title\";\nimport Cta from \"./Cta\";\nimport Voter from \"./Voter\";\nimport VoterBtns from \"./VoterBtns\";\nimport NoticeNoArtifact from \"./NoticeNoArtifact\";\nimport NoticeWrongNetwork from \"./NoticeWrongNetwork\";\nimport Proposal from \"./Proposal\";\nimport ProposalBtns from \"./ProposalBtns\";\nimport Vote from \"./Vote\";\nimport VoteBtns from \"./VoteBtns\";\nimport EndProposalsRegistering from \"./EndProposalsRegistering\";\nimport EndProposalsRegisteringBtns from \"./EndProposalsRegisteringBtns\";\nimport EndVotingSession from \"./EndVotingSession\";\nimport EndVotingSessionBtns from \"./EndVotingSessionBtns\";\nimport StartProposalsRegistering from \"./StartProposalsRegistering\";\nimport StartProposalsRegisteringBtns from \"./StartProposalsRegisteringBtns\";\nimport StartVotingSession from \"./StartVotingSession\";\nimport Tally from \"./Tally\";\nimport TallyBtns from \"./TallyBtns\";\nimport Winner from \"./Winner\";\nimport StartVotingSessionBtns from \"./StartVotingSessionBtns\";\nimport WinnerBtns from \"./WinnerBtns\";\nimport Events from \"./Events\";\n\n\nfunction Demo() {\n  const { state } = useEth();\n  const [isRegistered, setIsRegistered] = useState();\n  const [hasVoted, setHasVoted] = useState();\n  const [votedProposalId, setVotedProposalId] = useState();\n  const [currentStatus, setCurrentStatus] = useState();\n  const [description, setDescription] = useState();\n  const [voteCount, setVoteCount] = useState();\n  const [id, setId] = useState();\n  const [winningProposalID, setWinningProposalID] = useState();\n  const [eventValue, setEventValue] = useState(\"\");\n  const [oldEvents, setOldEvents] = useState();\n  const [errorValue, setErrorValue] = useState();\n\n\n\n  const demo =\n    <>\n      <table>\n        <td>\n          <div className=\"contract-container\">\n            <Voter isRegistered={isRegistered} hasVoted={hasVoted} votedProposalId={votedProposalId} />\n            <VoterBtns setIsRegistered={setIsRegistered} setHasVoted={setHasVoted} setVotedProposalId={setVotedProposalId} setEventValue={setEventValue} setOldEvents={setOldEvents} setErrorValue={setErrorValue}/>\n          </div>\n\n          <Cta />\n          <div className=\"contract-container\">\n            <StartProposalsRegistering currentStatus={currentStatus} />\n            <StartProposalsRegisteringBtns setCurrentStatus={setCurrentStatus} />\n          </div>\n\n          <Cta />\n          <div className=\"contract-container\">\n            <Proposal description={description} voteCount={voteCount} />\n            <ProposalBtns setDescription={setDescription} setVoteCount={setVoteCount} />\n          </div>\n\n          <Cta />\n          <div className=\"contract-container\">\n            <EndProposalsRegistering currentStatus={currentStatus} />\n            <EndProposalsRegisteringBtns setCurrentStatus={setCurrentStatus} />\n          </div>\n\n          <Cta />\n          <div className=\"contract-container\">\n            <StartVotingSession currentStatus={currentStatus} />\n            <StartVotingSessionBtns setCurrentStatus={setCurrentStatus} />\n          </div>\n\n          <Cta />\n          <div className=\"contract-container\">\n            <Vote currentStatus={id} />\n            <VoteBtns setCurrentStatus={setId} />\n          </div>\n\n          <Cta />\n          <div className=\"contract-container\">\n            <EndVotingSession currentStatus={currentStatus} />\n            <EndVotingSessionBtns setCurrentStatus={setCurrentStatus} />\n          </div>\n\n          <Cta />\n          <div className=\"contract-container\">\n            <Tally currentStatus={currentStatus} />\n            <TallyBtns setCurrentStatus={setCurrentStatus} />\n          </div>\n\n          <Cta />\n          <div className=\"contract-container\">\n            <Winner winningProposalID={winningProposalID} />\n            <WinnerBtns setWinningProposalID={setWinningProposalID} />\n          </div>\n        </td>\n        <td>\n          <div className=\"contract-container\">\n            <Events eventValue={eventValue} oldEvents={oldEvents}  errorValue={errorValue}/>\n          </div>\n        </td>\n      </table>\n\n    </>;\n\n  return (\n    <div className=\"demo\">\n      <Title />\n      {\n        !state.artifact ? <NoticeNoArtifact /> :\n          !state.contract ? <NoticeWrongNetwork /> :\n            demo\n      }\n    </div>\n  );\n}\n\nexport default Demo;\n","import { EthProvider } from \"./contexts/EthContext\";\nimport Demo from \"./components/Demo\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <EthProvider>\n      <div id=\"App\" >\n\n        <div className=\"container\">\n          <Demo />\n        </div>\n      </div>\n    </EthProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <App />\n);\n"],"sourceRoot":""}